CREATE TABLE IF NOT EXISTS episodeEntity (
    id INTEGER PRIMARY KEY NOT NULL,
    podcastId INTEGER NOT NULL,
    guid TEXT NOT NULL,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    episodeUrl TEXT NOT NULL,
    datePublishedTimestamp INTEGER NOT NULL,
    datePublishedFormatted TEXT NOT NULL,
    durationInSec INTEGER AS kotlin.Int,
    episodeNum INTEGER AS kotlin.Int,
    artworkUrl TEXT NOT NULL,
    enclosureUrl TEXT NOT NULL,
    enclosureSizeInBytes INTEGER NOT NULL,
    podcastTitle TEXT,
    isCompleted INTEGER AS kotlin.Boolean DEFAULT 0 NOT NULL,
    progressInSec INTEGER AS kotlin.Int,
    isFavourite INTEGER AS kotlin.Boolean DEFAULT 0 NOT NULL
);

getEpisodesForPodcasts:
SELECT * FROM episodeEntity WHERE podcastId IN :podcastsIds ORDER BY datePublishedTimestamp DESC LIMIT :limit;

getEpisodesForPodcast:
SELECT * FROM episodeEntity WHERE podcastId == :podcastId ORDER BY datePublishedTimestamp DESC;

getCompletedEpisodes:
SELECT * FROM episodeEntity WHERE isCompleted == 1;

getEpisode:
SELECT * FROM episodeEntity WHERE id == :id;

getFavouriteEpisodes:
SELECT * FROM episodeEntity WHERE isFavourite == 1;

hasEpisode:
SELECT 1 FROM episodeEntity WHERE id = :id;

insertEpisode:
INSERT OR REPLACE INTO episodeEntity(id, podcastId, guid, title, description, episodeUrl, datePublishedTimestamp, datePublishedFormatted, durationInSec, episodeNum, artworkUrl, enclosureUrl, enclosureSizeInBytes, podcastTitle) VALUES ?;

updateEpisodeInfo:
UPDATE episodeEntity SET
    guid = :guid,
    title = :title,
    description = :description,
    episodeUrl = :episodeUrl,
    datePublishedTimestamp = :datePublishedTimestamp,
    datePublishedFormatted = :datePublishedFormatted,
    episodeNum = :episodeNum,
    artworkUrl = :artworkUrl,
    enclosureUrl = :enclosureUrl,
    enclosureSizeInBytes = :enclosureSizeInBytes,
    podcastTitle = :podcastTitle
WHERE id = :id;

setEpisodeCompleted:
UPDATE episodeEntity SET isCompleted = 1 WHERE id = :id;

toggleEpisodeFavouriteStatus:
UPDATE episodeEntity SET isFavourite = :isFavourite WHERE id = :id;

updateEpisodeProgress:
UPDATE episodeEntity SET progressInSec = :progressInSec WHERE id = :id;

updateEpisodeDuration:
UPDATE episodeEntity SET durationInSec = :durationInSec WHERE id = :id;

updateEpisodePodcastTitleById:
UPDATE episodeEntity SET podcastTitle = :newPodcastTitle WHERE id = :id;

updateEpisodePodcastTitleByPodcastId:
UPDATE episodeEntity SET podcastTitle = :newPodcastTitle WHERE podcastId = :podcastId;

deleteEpisodesByIds:
DELETE FROM episodeEntity WHERE id IN :ids;
